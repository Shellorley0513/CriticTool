ENV_SKIP_COT_PROMPT = "If you meet environment error from tool call, please retry to call it NO MORE THAN THREE TIMES, and if it still fails, you should skip the current step and perform the next task. Please using the following format to reply ```\n{\n    // goal at current step\n    \"thought\": string;\n     // tool name to call\n    \"name\": string;\n    // input params required by current tool in JSON format\n    \"args\": Record<string, any>;\n}\n```\nIf you already know the answer, or you do not need to use tools,\nplease using the following format to reply:\n```\n{\n    // explain why the task is accomplished/unaccomplished\n    \"thought\": string;\n    \"name\": \"FinishAction\";\n    // your final response to the query\n    \"args\": string;\n}\n```\n"

ENV_SKIP_PROMPT = "If you meet environment error from tool call, please retry to call it NO MORE THAN THREE TIMES, and if it still fails, you should skip the current step and perform the next task. Please using the following format to reply ```\n{\n    // tool name to call\n    \"name\": string;\n    // input params required by current tool in JSON format\n    \"args\": Record<string, any>;\n}\n```\nIf you already know the answer, or you do not need to use tools,\nplease using the following format to reply:\n```\n{\n    \"name\": \"FinishAction\";\n    // your final response to the query\n    \"args\": string;\n}\n```\n"

ENV_FINISH_COT_PROMPT = "If you meet environment error from tool call, please retry to call it NO MORE THAN THREE TIMES, and if it still fails, you should report the error to the user and ask the user for next action. Please using the following format to reply ```\n{\n    // explain why the task is accomplished/unaccomplished\n    \"thought\": string;\n    \"name\": \"FinishAction\";\n    // your response\n    \"args\": string;\n}\n```\n"

ENV_FINISH_PROMPT = "If you meet environment error from tool call, please retry to call it NO MORE THAN THREE TIMES, and if it still fails, you should report the error to the user and ask the user for next action. Please using the following format to reply ```\n{\n    \"name\": \"FinishAction\";\n    // your response\n    \"args\": string;\n}\n```\n"

LLM_COT_PROMPT = "If you realize that an error occurred in the last step, then please analyse the error in the last step and regenerate the step to ensure that you get the correct response. Indicate the error type and select one of the following categories: tool_select_error(an exists but incorrect tool was chosen), tool_hallucination_error(a nonexistent tool was selected), parameters_value_error(the input parameter format or content is incorrect), parameters_key_error(incoming parameter keys are unrecognizable or required parameters are missing). And please using the following format to reply ```\n{\n    //description about the type of error in the last step(tool_select_error, tool_hallucination_error, parameters_value_error, parameters_key_error)\n     \"error\": string;\n      // goal at current step\n    \"thought\": string;\n     // tool name to call\n    \"name\": string;\n    // input params required by current tool in JSON format\n    \"args\": Record<string, any>;\n}\n```\n"

LLM_PROMPT = "If you realize that an error occurred in the last step, then please analyse the error in the last step and regenerate the step to ensure that you get the correct response. Indicate the error type and select one of the following categories: tool_select_error(an exists but incorrect tool was chosen), tool_hallucination_error(a nonexistent tool was selected), parameters_value_error(the input parameter format or content is incorrect), parameters_key_error(incoming parameter keys are unrecognizable or required parameters are missing). And please using the following format to reply ```\n{\n    //description about the type of error in the last step(tool_select_error, tool_hallucination_error, parameters_value_error, parameters_key_error)\n     \"error\": string;\n    // tool name to call\n    \"name\": string;\n    // input params required by current tool in JSON format\n    \"args\": Record<string, any>;\n}\n```\n"